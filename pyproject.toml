[project]
name = "mcp_programming"
version = "0.1.0"
description = "mcp programming example preoject"
authors = [
    {name = "Shawn Deng", email = "shawndeng1109@qq.com"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10,<3.12.99"
dependencies = [
    "httpx>=0.28.1",
    "mcp[cli]>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.9.7",  # Update ruff version
    "nox>=2024.10.9",
    "pytest>=8.3.4",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
    "commitizen>=3.12.0",  # 使用支持 Python 3.8 的版本
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
include = ["pyproject.toml", "mcp_programming/**/*.py","**/*/*.yaml","**/*/*.toml"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D"   # pydocstyle
]

ignore = [
    "W191", # indentation contains tabs
    "D401"  # imperative mood
]

extend-ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
]

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver2"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true
